{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/herbs/weatherapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst api = {\n  key: \"02db419a7c0f44463ec4a1a566dd93b5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${month} ${date}, ${year}`;\n  };\n\n  var currentDate = new Date();\n  var date = currentDate.getFullYear;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app cold\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: Math.round(weather.main.temp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: \"Sunny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/herbs/weatherapp/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","currentDate","Date","e","target","value","main","name","sys","country","Math","round","temp"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\nkey: \"02db419a7c0f44463ec4a1a566dd93b5\",\nbase: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\nconst search = evt => {\n  if(evt.key === \"Enter\"){\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n    .then(res => res.json())\n    .then(result => {\n    setWeather(result);\n    setQuery('');\n    console.log(result);\n  });\n}\n}\n\nconst dateBuilder = (d) => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${month} ${date}, ${year}`\n}\n\n  var currentDate = new Date();\n  var date = currentDate.getFullYear;\n  return (\n    <div className=\"app cold\">\n     <main>\n       <div className = \"search-box\">\n         <input\n            type=\"text\"\n            className = \"search-bar\"\n            placeholder = \"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n         />\n       </div>\n       {(typeof weather.main != \"undefined\") ? (\n       <div>\n         <div className = \"location-box\">\n          <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n          <div className=\"date\">{dateBuilder(new Date())}</div>\n       </div>\n       <div className=\"weather-box\">\n        <div className=\"temp\">\n          {Math.round(weather.main.temp)}\n        </div>\n        <div className=\"weather\">\n          Sunny\n        </div>\n       </div>\n       </div>\n       ):('')}\n     </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}