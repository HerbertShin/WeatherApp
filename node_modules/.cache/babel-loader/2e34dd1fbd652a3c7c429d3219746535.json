{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/herb/Documents/LocalGitRepository/WeatherApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DisplayWeather from './Components/DisplayWeather';\nimport Loading from './Components/Loading';\nconst api = {\n  key: \"02db419a7c0f44463ec4a1a566dd93b5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [loader, setLoader] = useState(false);\n\n  const search = evt => {\n    setLoader(true);\n\n    if (evt.key === \"Enter\") {\n      setTimeout(async () => {\n        await fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n          setLoader(false);\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        }, 2000);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp < 16 ? 'app-cold' : 'app-warm' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), loader ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this) : typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        obj: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 68\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JAmbRtli+kgbmII3UGfJz0CK8ko=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/herb/Documents/LocalGitRepository/WeatherApp/src/App.js"],"names":["React","useState","DisplayWeather","Loading","api","key","base","App","query","setQuery","weather","setWeather","loader","setLoader","search","evt","setTimeout","fetch","then","res","json","result","console","log","main","temp","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMa,MAAM,GAAGC,GAAG,IAAI;AACpBF,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAIE,GAAG,CAACV,GAAJ,KAAY,OAAhB,EAAyB;AACvBW,MAAAA,UAAU,CAAC,YAAS;AAClB,cAAMC,KAAK,CAAE,GAAEb,GAAG,CAACE,IAAK,aAAYE,KAAM,uBAAsBJ,GAAG,CAACC,GAAI,EAA7D,CAAL,CACLa,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEAG,MAAM,IAAI;AACdR,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,UAAAA,UAAU,CAACU,MAAD,CAAV;AACAZ,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,SAPK,EAOH,IAPG,CAAN;AAQD,OATS,CAAV;AAUD;AACF,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAOX,OAAO,CAACc,IAAf,IAAuB,WAAxB,GAAyCd,OAAO,CAACc,IAAR,CAAaC,IAAb,GAAoB,EAArB,GAA2B,UAA3B,GAAwC,UAAhF,GAA8F,KAA9G;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,QAAQ,EAAEC,CAAC,IAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJzB;AAKE,UAAA,KAAK,EAAEpB,KALT;AAME,UAAA,UAAU,EAAEM;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAWGF,MAAM,gBAAC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAD,GAAc,OAAOF,OAAO,CAACc,IAAf,IAAuB,WAAxB,gBAAuC,QAAC,cAAD;AAAgB,QAAA,GAAG,EAAEd;AAArB;AAAA;AAAA;AAAA;AAAA,cAAvC,GAA2E,EAXjG;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCQH,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport DisplayWeather from './Components/DisplayWeather';\nimport Loading from './Components/Loading';\n\nconst api = {\n  key: \"02db419a7c0f44463ec4a1a566dd93b5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [loader, setLoader] = useState(false);\n\n  const search = evt => {\n    setLoader(true);\n    if (evt.key === \"Enter\") {\n      setTimeout(async()=>{\n        await fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setLoader(false);\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        }, 2000);\n      })\n    }\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp < 16) ? 'app-cold' : 'app-warm') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {loader?<Loading />:(typeof weather.main != \"undefined\") ? <DisplayWeather obj={weather} /> : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}