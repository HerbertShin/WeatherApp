{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/herbs/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';var api={key:\"02db419a7c0f44463ec4a1a566dd93b5\",base:\"https://api.openweathermap.org/data/2.5/\"};function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var search=function search(evt){if(evt.key===\"Enter\"){fetch(\"\".concat(api.base,\"weather?q=\").concat(query,\"&units=metric&APPID=\").concat(api.key)).then(function(res){return res.json();}).then(function(result){setWeather(result);setQuery('');console.log(result);});}};var dateBuilder=function dateBuilder(d){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var day=days[d.getDay()];var date=d.getDate();var month=months[d.getMonth()];var year=d.getFullYear();return\"\".concat(day,\" \").concat(month,\" \").concat(date,\", \").concat(year);};var currentDate=new Date();var date=currentDate.getFullYear;return/*#__PURE__*/_jsx(\"div\",{className:typeof weather.main!=\"undefined\"?weather.main.temp<16?'app warm':'app':'app',children:/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-box\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"Search...\",onChange:function onChange(e){return setQuery(e.target.value);},value:query,onKeyPress:search})}),typeof weather.main!=\"undefined\"?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location\",children:[weather.name,\", \",weather.sys.country]}),/*#__PURE__*/_jsx(\"div\",{className:\"date\",children:dateBuilder(new Date())})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"temp\",children:[Math.round(weather.main.temp),\"\\xB0c\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"weather\",children:weather.weather[0].description}),/*#__PURE__*/_jsxs(\"div\",{className:\"feelslike\",children:[\"Feels Like \",Math.round(weather.main.feels_like),\"\\xB0c\"]})]})]}):'']})});}export default App;","map":{"version":3,"sources":["/Users/herbs/weatherapp/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","currentDate","Date","main","temp","e","target","value","name","sys","country","Math","round","description","feels_like"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\n  key: \"02db419a7c0f44463ec4a1a566dd93b5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${month} ${date}, ${year}`\n  }\n\n  var currentDate = new Date();\n  var date = currentDate.getFullYear;\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp < 16) ? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}°c\n        </div>\n              <div className=\"weather\">\n                {weather.weather[0].description}\n        </div>\n        <div className=\"feelslike\">\n          Feels Like {Math.round(weather.main.feels_like)}°c\n        </div>\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}