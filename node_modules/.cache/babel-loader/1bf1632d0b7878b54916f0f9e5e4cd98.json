{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/herb/Documents/LocalGitRepository/WeatherApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport DisplayWeather from './Components/DisplayWeather';\nconst api = {\n  key: \"02db419a7c0f44463ec4a1a566dd93b5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [loader, setLoader] = useState(false);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      setLoader(true);\n      setTimeout(async () => {\n        await fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n          setLoader(false);\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        }, 4000);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${month} ${date}, ${year}`;\n  };\n\n  const loading = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetching-div\",\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        className: \"skeleton-one\",\n        height: 30,\n        width: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        className: \"skeleton-two\",\n        height: 20,\n        width: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        className: \"skeleton-three\",\n        height: 50,\n        width: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        className: \"skeleton-four\",\n        height: 100,\n        width: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        className: \"skeleton-five\",\n        height: 80,\n        width: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  };\n\n  var currentDate = new Date();\n  var date = currentDate.getFullYear;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp < 16 ? 'app-cold' : 'app-warm' : 'app',\n    children: loader ? loading() : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        props: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 49\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JAmbRtli+kgbmII3UGfJz0CK8ko=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/herb/Documents/LocalGitRepository/WeatherApp/src/App.js"],"names":["React","useState","Skeleton","DisplayWeather","api","key","base","App","query","setQuery","weather","setWeather","loader","setLoader","search","evt","setTimeout","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","loading","currentDate","Date","main","temp","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport DisplayWeather from './Components/DisplayWeather';\n\nconst api = {\n  key: \"02db419a7c0f44463ec4a1a566dd93b5\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [loader, setLoader] = useState(false);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      setLoader(true);\n      setTimeout(async()=>{\n        await fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setLoader(false);\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        }, 4000);\n      })\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${month} ${date}, ${year}`\n  }\n  \n  const loading = () =>{\n    return (\n    <div className=\"fetching-div\">\n      <Skeleton \n      className=\"skeleton-one\"\n      height={30}\n      width={500}/>\n      <Skeleton\n      className=\"skeleton-two\"\n      height={20}\n      width={500}\n      />\n      <Skeleton\n      className=\"skeleton-three\"\n      height={50}\n      width={200}\n      />\n      <Skeleton\n      className=\"skeleton-four\"\n      height={100}\n      width={500}\n      />\n      <Skeleton\n      className=\"skeleton-five\"\n      height={80}\n      width={500}\n      />\n    </div>\n    )\n  }\n\n  var currentDate = new Date();\n  var date = currentDate.getFullYear;\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp < 16) ? 'app-cold' : 'app-warm') : 'app'}>\n      {loader?loading():\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? <DisplayWeather props={weather} /> : ('')}\n      </main>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}